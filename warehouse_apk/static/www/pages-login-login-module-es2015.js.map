{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n\\n    <ion-title>Iniciar Sesión</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"login-logo\\\">\\n    <img src=\\\"assets/imgs/logo.png\\\" alt=\\\"Company logo\\\">\\n  </div>\\n\\n  <form #loginForm=\\\"ngForm\\\" novalidate>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Usuario</ion-label>\\n        <ion-input [(ngModel)]=\\\"CONEXION.username\\\" name=\\\"username\\\" type=\\\"text\\\" #username=\\\"ngModel\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"off\\\"\\n          required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"username.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Usuario es un campo obligatorio.\\n        </p>\\n      </ion-text>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Contraseña</ion-label>\\n        <ion-input [(ngModel)]=\\\"CONEXION.password\\\" name=\\\"password\\\" type=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"password.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Contraseña es un campo obligatorio.\\n        </p>\\n      </ion-text>\\n      \\n\\n      <ion-item>\\n          <ion-label color=\\\"dark\\\">Servidor</ion-label>\\n          <ion-toggle [(ngModel)]=\\\"login_server\\\" [ngModelOptions] = {standalone:true} ></ion-toggle>\\n      </ion-item>\\n    \\n    </ion-list>\\n\\n    <ion-list *ngIf=\\\"!cargar && login_server\\\">\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">URL</ion-label>\\n        <ion-input [(ngModel)]=\\\"CONEXION.url\\\" #url=\\\"ngModel\\\" name=\\\"url\\\" placeholder=\\\"Ingresa url\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"url.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          URL es un campo obligatorio.\\n        </p>\\n      </ion-text>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Port</ion-label>\\n        <ion-input [(ngModel)]=\\\"CONEXION.port\\\" #port=\\\"ngModel\\\" name=\\\"port\\\" placeholder=\\\"Ingresa puerto\\\" required>\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-text color=\\\"danger\\\">\\n        <p [hidden]=\\\"port.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n          Puerto es un campo obligatorio.\\n        </p>\\n      </ion-text>\\n\\n      <ion-item>\\n          <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Base de datos</ion-label>\\n          <ion-input [(ngModel)]=\\\"CONEXION.db\\\" #db=\\\"ngModel\\\" name=\\\"db\\\" placeholder=\\\"Ingresa base de datos\\\" required>\\n          </ion-input>\\n        </ion-item>\\n  \\n        <ion-text color=\\\"danger\\\">\\n          <p [hidden]=\\\"db.valid || submitted == false\\\" class=\\\"ion-padding-start\\\">\\n            Base de datos es un campo obligatorio.\\n          </p>\\n        </ion-text>\\n\\n    </ion-list>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button (click)=\\\"onLogin(loginForm)\\\" type=\\\"submit\\\" expand=\\\"block\\\">Login</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".login-logo {\\n  padding: 20px 0;\\n  min-height: 200px;\\n  text-align: center;\\n}\\n\\n.login-logo img {\\n  max-width: 150px;\\n}\\n\\n.list {\\n  margin-bottom: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2tpa28vaW9uaWM0L3dhcmVob3VzZV9hcGsvc3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUU7RUFDRSxnQkFBQTtBQ0NKOztBREVFO0VBQ0UsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1sb2dvIHtcbiAgICBwYWRkaW5nOiAyMHB4IDA7XG4gICAgbWluLWhlaWdodDogMjAwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIFxuICAubG9naW4tbG9nbyBpbWcge1xuICAgIG1heC13aWR0aDogMTUwcHg7XG4gIH1cbiAgXG4gIC5saXN0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gICIsIi5sb2dpbi1sb2dvIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubG9naW4tbG9nbyBpbWcge1xuICBtYXgtd2lkdGg6IDE1MHB4O1xufVxuXG4ubGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConnectionOptions } from '../../interfaces/connection-options';\nimport { OdooService } from '../../services/odoo.service';\nimport { AlertController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { AudioService } from '../../services/audio.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  CONEXION: ConnectionOptions = { username: '', password: '', url: 'http://localhost', port: 8069, db: '', uid: 0, context: {}, user: {}, logged_in: false};\n  CONEXION_local: ConnectionOptions = { username: '', password: '', url: '', port: null, db: '', uid: 0, context: {}, user: {}, logged_in: false};\n  cargar: boolean;\n  submitted: boolean;\n\n  constructor(\n    private audio: AudioService,\n    private odoo: OdooService,\n    public router: Router,\n    public alertCtrl: AlertController,\n    private storage: Storage,\n    private route: ActivatedRoute,\n  ) {\n    if (this.route.snapshot.paramMap.get('login')){\n      this.CONEXION.username = this.route.snapshot.paramMap.get('login')\n    };\n    this.check_storage_conexion(this.route.snapshot.paramMap.get('borrar'))\n    if (this.route.snapshot.paramMap.get('borrar')){\n        this.cargar = false;\n    }\n    else {\n        // Autologin al cargar app\n        this.cargar = false;\n        this.conectarApp(false);\n    }\n  }\n\n  check_storage_conexion(borrar) {\n    // Fijamos siempre a false el parámetro borrar para no tener que teclear usuario y contraseña siempre\n    borrar = false\n    if (borrar){\n        this.CONEXION = this.CONEXION_local;\n    }\t\n    else {\n        this.storage.get('CONEXION').then((val) => {\n            if (val && val['username']){\n                this.CONEXION = val\n            }\n            else {\n                this.CONEXION = this.CONEXION_local;\n                this.storage.set('CONEXION', this.CONEXION).then(() => {\n                })\n            }\n        })\n    }\n  }\n\n  conectarApp(verificar) {\n    this.cargar = true;\n    if (verificar){\n        this.storage.set('CONEXION', this.CONEXION).then(() => {\n          this.log_in();\n        })\n    }\n    else {\n        this.storage.get('CONEXION').then((val) => {\n            var con;\n            if (val == null) {//no existe datos         \n                this.cargar = false;\n                con = this.CONEXION;\n                if (con.username.length < 3 || con.password.length < 3) {\n                    if (verificar) {\n                        this.presentAlert('Alerta!', 'Por favor ingrese usuario y contraseña');\n                    }\n                    return;\n                }\n            }\n          else {\n                //si los trae directamente ya fueron verificados\n                con = val;\n                if (con.username.length < 3 || con.password.length < 3) {\n                    this.cargar = false;\n                    return\n                }\n          }\n          if (con){\n            this.storage.set('CONEXION', con).then(() => {\n                  this.log_in();\n                  this.cargar=false\n                })\n            }\n        })\n    }\n  }\n\n  log_in() {\n    this.odoo.login(this.CONEXION.username, this.CONEXION.password).then((data)=> {\n      this.router.navigateByUrl('/stock-picking-type-list');\n    }).catch((error)=>{\n      this.presentAlert('Error al hacer login:', error);\n    });\n  }\n\n\n  ngOnInit() {\n    this.odoo.isLoggedIn().then((data)=>{\n      if (data==true) {\n        this.router.navigateByUrl('/stock-picking-type-list');\n      }\n    })\n    .catch((error)=>{\n      this.presentAlert('Error al hacer login:', error);\n    });\n  }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n\n    if (form.valid) {\n      this.CONEXION = { \n        username: form.form.value.username, \n        password: form.form.value.password, \n        port: form.form.value.port || this.CONEXION.port, \n        url: form.form.value.url || this.CONEXION.url, \n        db: form.form.value.db || this.CONEXION.db, \n        uid: 0, \n        context: {}, \n        user: {}, \n        logged_in: false\n      };\n      \n      this.storage.set('CONEXION', this.CONEXION).then(() => {\n        this.log_in();\n      })\n    }\n  }\n\n  async presentAlert(titulo, texto) {\n    this.audio.play('error');\n    const alert = await this.alertCtrl.create({\n        header: titulo,\n        subHeader: texto,\n        buttons: ['Ok']\n    });\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}